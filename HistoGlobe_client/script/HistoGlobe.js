// Generated by CoffeeScript 1.8.0
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

if (window.HG == null) {
  window.HG = {};
}

HG.HistoGlobe = (function() {
  function HistoGlobe(pathToJson) {
    this._updateLayout = __bind(this._updateLayout, this);
    this._onResize = __bind(this._onResize, this);
    this._onSlide = __bind(this._onSlide, this);
    this._onSlideEnd = __bind(this._onSlideEnd, this);
    this._collapse = __bind(this._collapse, this);
    this.isInMobileMode = __bind(this.isInMobileMode, this);
    var defaultConfig;
    HG.mixin(this, HG.CallbackContainer);
    HG.CallbackContainer.call(this);
    this.addCallback("onTopAreaSlide");
    this.addCallback("onAllModulesLoaded");
    this.addCallback("onMapAreaSizeChange");
    this.addCallback("onMapAreaSizeChangeEnd");
    this.timeline = null;
    this.map = null;
    this.sidebar = null;
    this._config = null;
    defaultConfig = {
      container: "histoglobe",
      nowYear: 2014,
      minYear: 1940,
      maxYear: 2020,
      minZoom: 1,
      maxZoom: 6,
      startZoom: 4,
      maxBounds: void 0,
      startLatLong: [51.505, 10.09],
      sidebarCollapsed: "auto",
      sidebarEnabled: "true",
      tiles: 'data/tiles/'
    };
    $.getJSON(pathToJson, (function(_this) {
      return function(config) {
        var hgConf, load_module, moduleConfig, moduleName;
        hgConf = config["HistoGlobe"];
        _this._config = $.extend({}, defaultConfig, hgConf);
        _this._config.container = document.getElementById(_this._config.container);
        _this._createTopArea();
        _this._createMap();
        if (_this._config.sidebarEnabled) {
          _this._createSidebar();
          _this._createCollapseButton();
        }
        _this._createTimeline();
        $(window).on('resize', _this._onResize);
        _this._collapsed = true;
        load_module = function(moduleName, moduleConfig) {
          var defaultConf, newMod;
          defaultConf = {
            enabled: true
          };
          moduleConfig = $.extend({}, defaultConf, moduleConfig);
          if (window["HG"][moduleName] != null) {
            if (moduleConfig.enabled) {
              newMod = new window["HG"][moduleName](moduleConfig);
              return _this.addModule(newMod);
            }
          } else {
            return console.error("The module " + moduleName + " is not part of the HG namespace!");
          }
        };
        for (moduleName in config) {
          moduleConfig = config[moduleName];
          'if moduleName is "Widgets"\n  for widget in moduleConfig\n    load_module widget.type, widget\nelse if moduleName isnt "HistoGlobe"';
          if (moduleName !== "HistoGlobe") {
            load_module(moduleName, moduleConfig);
          }
        }
        _this.notifyAll("onAllModulesLoaded");
        _this._updateLayout();
        if (_this._config.sidebarCollapsed === "false") {
          return _this._collapse();
        } else if (_this._config.sidebarCollapsed === "auto" && _this.isInMobileMode()) {
          return _this._collapse();
        }
      };
    })(this));
  }

  HistoGlobe.prototype.addModule = function(module) {
    return module.hgInit(this);
  };

  HistoGlobe.prototype.isInMobileMode = function() {
    return window.innerWidth < HGConfig.sidebar_width.val + HGConfig.map_min_width.val;
  };

  HistoGlobe.prototype.getMapAreaSize = function() {
    var size;
    if (this._collapsed) {
      return size = {
        x: window.innerWidth - HGConfig.sidebar_collapsed_width.val,
        y: $(this._top_area).outerHeight()
      };
    } else {
      return size = {
        x: window.innerWidth - HGConfig.sidebar_width.val,
        y: $(this._top_area).outerHeight()
      };
    }
  };

  HistoGlobe.prototype.getContainer = function() {
    return this._config.container;
  };

  HistoGlobe.prototype._createTopArea = function() {
    this._top_area = this._createElement(this._config.container, "div", "top-area");
    this._top_area_wrapper = this._createElement(this._top_area, "div", "");
    this._top_area_wrapper.className = "swiper-wrapper";
    this._top_swiper = new Swiper('#top-area', {
      mode: 'horizontal',
      slidesPerView: 'auto',
      noSwiping: true,
      longSwipesRatio: 0.1,
      moveStartThreshold: 10,
      onSetWrapperTransform: (function(_this) {
        return function(s, t) {
          return _this._onSlide(t);
        };
      })(this),
      onSetWrapperTransition: (function(_this) {
        return function(s, d) {
          if (d === 0) {
            return $(_this.mapCanvas).addClass("no-animation");
          } else {
            return $(_this.mapCanvas).removeClass("no-animation");
          }
        };
      })(this)
    });
    if (this._config.sidebarEnabled) {
      return this._top_swiper.wrapperTransitionEnd(this._onSlideEnd, true);
    }
  };

  HistoGlobe.prototype._createSidebar = function() {
    this._sidebar_area = this._createElement(this._top_area_wrapper, "div", "sidebar-area");
    this._sidebar_area.className = "swiper-slide";
    this.sidebar = new HG.Sidebar;
    return this.addModule(this.sidebar);
  };

  HistoGlobe.prototype._createCollapseButton = function() {
    this._collapse_area_left = this._createElement(this._map_area, "div", "collapse-area-left");
    this._collapse_button = this._createElement(this._map_area, "i", "collapse-button");
    this._collapse_button.className = "fa fa-arrow-circle-o-left fa-2x";
    $(this._collapse_button).tooltip({
      title: "Seitenleiste öffnen/schließen",
      placement: "left",
      container: "body"
    });
    $(this._collapse_button).click(this._collapse);
    return $(this._collapse_area_left).click(this._collapse);
  };

  HistoGlobe.prototype._createMap = function() {
    this._map_area = this._createElement(this._top_area_wrapper, "div", "map-area");
    this._map_area.className = "swiper-slide";
    this.mapCanvas = this._createElement(this._map_area, "div", "map-canvas");
    this.mapCanvas.className = "swiper-no-swiping";
    this._map_area.appendChild(this.mapCanvas);
    this.map = new HG.Display2D;
    return this.addModule(this.map);
  };

  HistoGlobe.prototype._createTimeline = function() {
    this._timeline_area = this._createElement(this._config.container, "div", "timeline-area");
    this.timeline = new HG.Timeline({
      parentDiv: this._timeline_area,
      nowYear: this._config.nowYear,
      minYear: this._config.minYear,
      maxYear: this._config.maxYear
    });
    return this.addModule(this.timeline);
  };

  HistoGlobe.prototype._collapse = function() {
    this._collapsed = !this._collapsed;
    if (this._collapsed) {
      return this._top_swiper.swipePrev();
    } else {
      return this._top_swiper.swipeNext();
    }
  };

  HistoGlobe.prototype._onSlideEnd = function() {
    if (this._last_slide_pos !== this._top_swiper.slides[0].getOffset().left) {
      this._last_slide_pos = this._top_swiper.slides[0].getOffset().left;
      this._collapsed = this._last_slide_pos >= 0;
      if (this._collapsed) {
        this._collapse_button.className = "fa fa-arrow-circle-o-left fa-2x";
        this._collapse_area_left.style.width = "0px";
      } else {
        this._collapse_button.className = "fa fa-arrow-circle-o-right fa-2x";
        if (this.isInMobileMode()) {
          this._collapse_area_left.style.width = "" + HGConfig.map_collapsed_width.val + "px";
        }
      }
      return this.notifyAll("onMapAreaSizeChangeEnd", window.innerWidth - HGConfig.sidebar_collapsed_width.val + this._last_slide_pos);
    }
  };

  HistoGlobe.prototype._onSlide = function(transform) {
    if (transform.x < 0) {
      this.mapCanvas.style.right = "" + (transform.x / 2) + "px";
    } else {
      this.mapCanvas.style.right = 0;
    }
    this.notifyAll("onTopAreaSlide", transform.x);
    return this.notifyAll("onMapAreaSizeChange", window.innerWidth - HGConfig.sidebar_collapsed_width.val + transform.x);
  };

  HistoGlobe.prototype._onResize = function() {
    return this._updateLayout();
  };

  HistoGlobe.prototype._updateLayout = function() {
    var height, map_height, map_width, sidebar_width, width;
    width = window.innerWidth;
    height = window.innerHeight - $(this._top_area).offset().top;
    map_height = height - HGConfig.timeline_height.val;
    map_width = width - (this._config.sidebarEnabled ? HGConfig.sidebar_collapsed_width.val : 0);
    sidebar_width = HGConfig.sidebar_width.val;
    if (this.isInMobileMode()) {
      sidebar_width = width - HGConfig.map_collapsed_width.val;
    }
    this._map_area.style.width = "" + map_width + "px";
    this._map_area.style.height = "" + map_height + "px";
    if (this._config.sidebarEnabled) {
      this.sidebar.resize(sidebar_width, map_height);
    }
    this.map.resize(map_width, map_height);
    this._top_swiper.reInit();
    if (!this._collapsed) {
      return this._top_swiper.swipeNext();
    }
  };

  HistoGlobe.prototype._createElement = function(container, type, id) {
    var div;
    div = document.createElement(type);
    div.id = id;
    container.appendChild(div);
    return div;
  };

  return HistoGlobe;

})();
